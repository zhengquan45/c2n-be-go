// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/encode/sign_participation": {
            "post": {
                "description": "Sign Participation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "encode"
                ],
                "summary": "Sign Participation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Address",
                        "name": "userAddress",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "contractAddress",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/encode/sign_registration": {
            "post": {
                "description": "Sign Registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "encode"
                ],
                "summary": "Sign Registration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Address",
                        "name": "userAddress",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "contractAddress",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "Returns a greeting message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "HelloWorld",
                "responses": {
                    "200": {
                        "description": "Hello, World!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/base_info": {
            "get": {
                "description": "Get product base info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Product Base Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Contract Id",
                        "name": "productContractId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Result-response_ProductContractResponse"
                        }
                    }
                }
            }
        },
        "/product/list": {
            "get": {
                "description": "Get product list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Product List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Result-response_ProductContractResponse"
                        }
                    }
                }
            }
        },
        "/update": {
            "post": {
                "description": "Update product contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Update Product Contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Contract Id",
                        "name": "productContractId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Result-string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Result-response_ProductContractResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "返回Code",
                    "type": "integer"
                },
                "data": {
                    "description": "返回数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ProductContractResponse"
                        }
                    ]
                },
                "message": {
                    "description": "返回消息",
                    "type": "string"
                }
            }
        },
        "model.Result-string": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "返回Code",
                    "type": "integer"
                },
                "data": {
                    "description": "返回数据",
                    "type": "string"
                },
                "message": {
                    "description": "返回消息",
                    "type": "string"
                }
            }
        },
        "response.ProductContractResponse": {
            "type": "object",
            "properties": {
                "about_html": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "amount_of_tokens_to_sell": {
                    "type": "string"
                },
                "card_link": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "create_time": {
                    "type": "integer"
                },
                "current_price": {
                    "type": "integer"
                },
                "decimals": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "follower": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "max_participation": {
                    "type": "string"
                },
                "medias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_of_registrations": {
                    "type": "integer"
                },
                "payment_token": {
                    "type": "string"
                },
                "payment_token_decimals": {
                    "type": "integer"
                },
                "project_website": {
                    "type": "string"
                },
                "registration_time_ends": {
                    "type": "integer"
                },
                "registration_time_starts": {
                    "type": "integer"
                },
                "roi": {
                    "type": "string"
                },
                "sale_contract_address": {
                    "type": "string"
                },
                "sale_end": {
                    "type": "integer"
                },
                "sale_start": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "tge": {
                    "type": "integer"
                },
                "token_address": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_price_in_PT": {
                    "type": "string"
                },
                "total_raised": {
                    "type": "string"
                },
                "total_tokens_sold": {
                    "type": "string"
                },
                "tricker": {
                    "type": "string"
                },
                "tweet_id": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "unlock_time": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "integer"
                },
                "vesting": {
                    "type": "string"
                },
                "vesting_percent_per_portion": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "vesting_portions_unlock_time": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "C2N API",
	Description:      "This is C2N API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
